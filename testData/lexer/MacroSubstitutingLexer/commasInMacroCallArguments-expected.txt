- ('-')
atom_name ('module')
( ('(')
atom_name ('commasInMacroCallArguments')
) (')')
. ('.')
WHITE_SPACE ('\n\n\n')
- ('-')
atom_name ('define')
( ('(')
var ('RETURN')
( ('(')
var ('X')
) (')')
, (',')
macro_body_begin ('')
WHITE_SPACE (' ')
atom_name ('ok')
macro_body_end ('')
) (')')
. ('.')
WHITE_SPACE ('\n\n')
atom_name ('f')
( ('(')
var ('_X')
, (',')
WHITE_SPACE (' ')
var ('_Y')
) (')')
WHITE_SPACE (' ')
-> ('->')
WHITE_SPACE (' ')
atom_name ('ok')
. ('.')
WHITE_SPACE ('\n\n')
module_doc_comment ('%%% TODO add tests for other types of braces from ErlangBraceMatcher class')
WHITE_SPACE ('\n\n')
- ('-')
atom_name ('define')
( ('(')
var ('RETURN_TUPLE')
( ('(')
var ('X')
, (',')
WHITE_SPACE (' ')
var ('Y')
) (')')
, (',')
macro_body_begin ('')
WHITE_SPACE (' ')
? ('?')
var ('RETURN')
( ('(')
{ ('{')
var ('X')
, (',')
WHITE_SPACE (' ')
var ('Y')
} ('}')
) (')')
macro_body_end ('')
) (')')
. ('.')
WHITE_SPACE ('\n')
- ('-')
atom_name ('define')
( ('(')
var ('RETURN_CALL')
( ('(')
var ('X')
, (',')
WHITE_SPACE (' ')
var ('Y')
) (')')
, (',')
macro_body_begin ('')
WHITE_SPACE (' ')
? ('?')
var ('RETURN')
( ('(')
atom_name ('f')
( ('(')
var ('X')
, (',')
WHITE_SPACE (' ')
var ('Y')
) (')')
) (')')
macro_body_end ('')
) (')')
. ('.')
WHITE_SPACE ('\n')
- ('-')
atom_name ('define')
( ('(')
var ('RETURN_BIT')
( ('(')
var ('X')
, (',')
WHITE_SPACE (' ')
var ('Y')
) (')')
, (',')
macro_body_begin ('')
WHITE_SPACE (' ')
? ('?')
var ('RETURN')
( ('(')
<< ('<<')
var ('X')
, (',')
WHITE_SPACE (' ')
var ('Y')
>> ('>>')
) (')')
macro_body_end ('')
) (')')
. ('.')
WHITE_SPACE ('\n')
- ('-')
atom_name ('define')
( ('(')
var ('RETURN_BIT_COMPREHENSION')
( ('(')
var ('X')
, (',')
WHITE_SPACE (' ')
var ('Y')
) (')')
, (',')
macro_body_begin ('')
WHITE_SPACE (' ')
? ('?')
var ('RETURN')
( ('(')
<< ('<<')
WHITE_SPACE (' ')
<< ('<<')
var ('A')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
var ('B')
>> ('>>')
WHITE_SPACE (' ')
|| ('||')
WHITE_SPACE (' ')
<< ('<<')
var ('A')
>> ('>>')
WHITE_SPACE (' ')
<= ('<=')
WHITE_SPACE (' ')
<< ('<<')
var ('X')
>> ('>>')
, (',')
WHITE_SPACE (' ')
<< ('<<')
var ('B')
>> ('>>')
WHITE_SPACE (' ')
<= ('<=')
WHITE_SPACE (' ')
<< ('<<')
var ('Y')
>> ('>>')
WHITE_SPACE (' ')
>> ('>>')
) (')')
macro_body_end ('')
) (')')
. ('.')
WHITE_SPACE ('\n')
- ('-')
atom_name ('define')
( ('(')
var ('RETURN_LIST')
( ('(')
var ('X')
, (',')
WHITE_SPACE (' ')
var ('Y')
) (')')
, (',')
macro_body_begin ('')
WHITE_SPACE (' ')
? ('?')
var ('RETURN')
( ('(')
[ ('[')
var ('X')
, (',')
WHITE_SPACE (' ')
var ('Y')
] (']')
) (')')
macro_body_end ('')
) (')')
. ('.')
WHITE_SPACE ('\n')
- ('-')
atom_name ('define')
( ('(')
var ('RETURN_LIST_COMPREHENSION')
( ('(')
var ('X')
, (',')
WHITE_SPACE (' ')
var ('Y')
) (')')
, (',')
macro_body_begin ('')
WHITE_SPACE (' ')
? ('?')
var ('RETURN')
( ('(')
[ ('[')
atom_name ('ok')
WHITE_SPACE (' ')
|| ('||')
WHITE_SPACE (' ')
var ('A')
WHITE_SPACE (' ')
<- ('<-')
WHITE_SPACE (' ')
[ ('[')
var ('X')
] (']')
, (',')
WHITE_SPACE (' ')
var ('B')
WHITE_SPACE (' ')
<- ('<-')
WHITE_SPACE (' ')
[ ('[')
var ('Y')
] (']')
] (']')
) (')')
macro_body_end ('')
) (')')
. ('.')
WHITE_SPACE ('\n\n')
module_doc_comment ('%%% end of macro definitions')
WHITE_SPACE ('\n\n')
atom_name ('g_tuple')
( ('(')
) (')')
WHITE_SPACE (' ')
-> ('->')
WHITE_SPACE (' ')
? ('?')
var ('RETURN_TUPLE')
( ('(')
integer ('10')
, (',')
WHITE_SPACE (' ')
integer ('10')
) (')')
Wrapper (?) ('?')
Wrapper (var) ('RETURN')
Wrapper (() ('(')
Wrapper ({) ('{')
Wrapper (integer) ('10')
Wrapper (,) (',')
Wrapper (WHITE_SPACE) ('  ')
Wrapper (integer) ('10')
Wrapper (}) ('}')
Wrapper ()) (')')
Wrapper (atom_name) ('ok')
. ('.')
WHITE_SPACE ('\n')
atom_name ('g_call')
( ('(')
) (')')
WHITE_SPACE (' ')
-> ('->')
WHITE_SPACE (' ')
? ('?')
var ('RETURN_CALL')
( ('(')
integer ('10')
, (',')
WHITE_SPACE (' ')
integer ('10')
) (')')
Wrapper (?) ('?')
Wrapper (var) ('RETURN')
Wrapper (() ('(')
Wrapper (atom_name) ('f')
Wrapper (() ('(')
Wrapper (integer) ('10')
Wrapper (,) (',')
Wrapper (WHITE_SPACE) ('  ')
Wrapper (integer) ('10')
Wrapper ()) (')')
Wrapper ()) (')')
Wrapper (atom_name) ('ok')
. ('.')
WHITE_SPACE ('\n')
atom_name ('g_bit')
( ('(')
) (')')
WHITE_SPACE (' ')
-> ('->')
WHITE_SPACE (' ')
? ('?')
var ('RETURN_BIT')
( ('(')
integer ('10')
, (',')
WHITE_SPACE (' ')
integer ('10')
) (')')
Wrapper (?) ('?')
Wrapper (var) ('RETURN')
Wrapper (() ('(')
Wrapper (<<) ('<<')
Wrapper (integer) ('10')
Wrapper (,) (',')
Wrapper (WHITE_SPACE) ('  ')
Wrapper (integer) ('10')
Wrapper (>>) ('>>')
Wrapper ()) (')')
Wrapper (atom_name) ('ok')
. ('.')
WHITE_SPACE ('\n')
atom_name ('g_bit_comprehension')
( ('(')
) (')')
WHITE_SPACE (' ')
-> ('->')
WHITE_SPACE (' ')
? ('?')
var ('RETURN_BIT_COMPREHENSION')
( ('(')
integer ('10')
, (',')
WHITE_SPACE (' ')
integer ('10')
) (')')
Wrapper (?) ('?')
Wrapper (var) ('RETURN')
Wrapper (() ('(')
Wrapper (<<) ('<<')
Wrapper (WHITE_SPACE) (' ')
Wrapper (<<) ('<<')
Wrapper (var) ('A')
Wrapper (WHITE_SPACE) (' ')
Wrapper (+) ('+')
Wrapper (WHITE_SPACE) (' ')
Wrapper (var) ('B')
Wrapper (>>) ('>>')
Wrapper (WHITE_SPACE) (' ')
Wrapper (||) ('||')
Wrapper (WHITE_SPACE) (' ')
Wrapper (<<) ('<<')
Wrapper (var) ('A')
Wrapper (>>) ('>>')
Wrapper (WHITE_SPACE) (' ')
Wrapper (<=) ('<=')
Wrapper (WHITE_SPACE) (' ')
Wrapper (<<) ('<<')
Wrapper (integer) ('10')
Wrapper (>>) ('>>')
Wrapper (,) (',')
Wrapper (WHITE_SPACE) (' ')
Wrapper (<<) ('<<')
Wrapper (var) ('B')
Wrapper (>>) ('>>')
Wrapper (WHITE_SPACE) (' ')
Wrapper (<=) ('<=')
Wrapper (WHITE_SPACE) (' ')
Wrapper (<<) ('<<')
Wrapper (WHITE_SPACE) (' ')
Wrapper (integer) ('10')
Wrapper (>>) ('>>')
Wrapper (WHITE_SPACE) (' ')
Wrapper (>>) ('>>')
Wrapper ()) (')')
Wrapper (atom_name) ('ok')
. ('.')
WHITE_SPACE ('\n')
atom_name ('g_list')
( ('(')
) (')')
WHITE_SPACE (' ')
-> ('->')
WHITE_SPACE (' ')
? ('?')
var ('RETURN_LIST')
( ('(')
integer ('10')
, (',')
WHITE_SPACE (' ')
integer ('10')
) (')')
Wrapper (?) ('?')
Wrapper (var) ('RETURN')
Wrapper (() ('(')
Wrapper ([) ('[')
Wrapper (integer) ('10')
Wrapper (,) (',')
Wrapper (WHITE_SPACE) ('  ')
Wrapper (integer) ('10')
Wrapper (]) (']')
Wrapper ()) (')')
Wrapper (atom_name) ('ok')
. ('.')
WHITE_SPACE ('\n')
atom_name ('g_list_comprehension')
( ('(')
) (')')
WHITE_SPACE (' ')
-> ('->')
WHITE_SPACE (' ')
? ('?')
var ('RETURN_LIST_COMPREHENSION')
( ('(')
integer ('10')
, (',')
WHITE_SPACE (' ')
integer ('10')
) (')')
Wrapper (?) ('?')
Wrapper (var) ('RETURN')
Wrapper (() ('(')
Wrapper ([) ('[')
Wrapper (atom_name) ('ok')
Wrapper (WHITE_SPACE) (' ')
Wrapper (||) ('||')
Wrapper (WHITE_SPACE) (' ')
Wrapper (var) ('A')
Wrapper (WHITE_SPACE) (' ')
Wrapper (<-) ('<-')
Wrapper (WHITE_SPACE) (' ')
Wrapper ([) ('[')
Wrapper (integer) ('10')
Wrapper (]) (']')
Wrapper (,) (',')
Wrapper (WHITE_SPACE) (' ')
Wrapper (var) ('B')
Wrapper (WHITE_SPACE) (' ')
Wrapper (<-) ('<-')
Wrapper (WHITE_SPACE) (' ')
Wrapper ([) ('[')
Wrapper (WHITE_SPACE) (' ')
Wrapper (integer) ('10')
Wrapper (]) (']')
Wrapper (]) (']')
Wrapper ()) (')')
Wrapper (atom_name) ('ok')
. ('.')