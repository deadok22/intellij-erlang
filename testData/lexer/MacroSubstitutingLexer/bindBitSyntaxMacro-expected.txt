- ('-')
atom ('module')
( ('(')
atom ('bindBitSyntaxMacro')
) (')')
. ('.')
WHITE_SPACE ('\n\n')
module_doc_comment ('%%%')
WHITE_SPACE ('\n')
module_doc_comment ('%%% This test should check if "= <<" is treated as '=' and '<<' tokens, not as '=<' '<' after macro body substitution.')
WHITE_SPACE ('\n')
module_doc_comment ('%%% See http://www.erlang.org/doc/programming_examples/bit_syntax.html chapter 4.2')
WHITE_SPACE ('\n')
module_doc_comment ('%%%')
WHITE_SPACE ('\n')
- ('-')
atom ('define')
( ('(')
var ('X_BYTE_0')
, (',')
macro_body_begin ('')
WHITE_SPACE (' ')
var ('X')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
<< ('<<')
integer ('0')
: (':')
integer ('8')
>> ('>>')
macro_body_end ('')
) (')')
. ('.')
WHITE_SPACE ('\n\n')
atom ('foo')
( ('(')
) (')')
WHITE_SPACE (' ')
-> ('->')
WHITE_SPACE (' ')
? ('?')
var ('X_BYTE_0')
Wrapper (var) ('X')
Wrapper (=) ('=')
Wrapper (<<) ('<<')
Wrapper (integer) ('0')
Wrapper (:) (':')
Wrapper (integer) ('8')
Wrapper (>>) ('>>')
, (',')
WHITE_SPACE (' ')
var ('X')
. ('.')